{
  "scope": "source.ruby.rails",
  "completions":
  [
    // models
    { "trigger": "bfe\tbefore_filter_except", "contents": "before_filter :$1, :except => ['$2']" },
    { "trigger": "bfo\tbefore_filter_only", "contents": "before_filter :$1, :only => ['$2']" },
    { "trigger": "bt\tbelongs_to", "contents": "belongs_to :$1${2:, :foreign_key => '$3_id'}${4:, :class_name => '$5'}" },
    { "trigger": "bt\tbelongs_to", "contents": "belongs_to :$1"},
    { "trigger": "btf\tbelongs_to_full", "contents": "belongs_to :$1, :foreign_key => '$2_id', :class_name => '$3'" },
    { "trigger": "hm\thas_many", "contents": "has_many :$1"},
    { "trigger": "hmt\thas_many_through", "contents": "has_many :$1, :through => :$2${3:, :source => :$4}"},
    { "trigger": "va\tvalidates", "contents": "validates :$1, "},
    { "trigger": "vap\tvalidates_presence", "contents": "validates :$1,\n          presence: true"},
    { "trigger": "vau\tvalidates_uniqueness", "contents": "validates :$1,\n          uniqueness: true"},
    { "trigger": "vapu\tvalidates_presence_uniqueness", "contents": "validates :$1, :presence => true, :uniqueness => \\{:case_sensitive => ${2:true}${3:false}\\}"},

    { "trigger": "aa\tacts_as_list", "contents": "acts_as_list${1: scope: [:$2]}" },

    { "trigger": "rt\tredirect_to", "contents": "redirect_to $0" },
    { "trigger": "fl\tflash", "contents": ":flash => { :success => '$0' }" },

    // translations
    { "trigger": "t\ttranslate", "contents": "t('$0')" },

    // migrations
    { "trigger": "ac\tadd_column", "contents": "add_column :${1:table}, :${2:field}, :${0:integer}" },
    { "trigger": "rc\tremove_column", "contents": "remove_column :${1:table}, :${0:field}" }
  ]
}
